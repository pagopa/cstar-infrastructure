{
  "name": "If invalidated flow needs to be logged",
  "type": "IfCondition",
  "dependsOn": [
    {
      "activity": "Purge invalid flow",
      "dependencyConditions": [
        "Succeeded"
      ]
    }
  ],
  "userProperties": [],
  "typeProperties": {
    "expression": {
      "value": "@contains(activity('findInvalidatedRows').output,'firstRow')",
      "type": "Expression"
    },
    "ifTrueActivities": [
      {
        "name": "logResults",
        "type": "SetVariable",
        "dependsOn": [],
        "policy": {
          "secureOutput": false,
          "secureInput": false
        },
        "userProperties": [],
        "typeProperties": {
          "variableName": "logResult",
          "value": {
            "value": "@concat(\n  'fileName: ', activity('findInvalidatedRows').output.firstRow.fileName, ', ',\n  'senderCode: ', activity('findInvalidatedRows').output.firstRow.senderCode, ', ',\n  'TotaleRecord: ', activity('findInvalidatedRows').output.firstRow.TotaleRecord, ', ',\n  'RecordInvalidi: ', activity('findInvalidatedRows').output.firstRow.RecordInvalidi, ', ',\n  'dataInvalidaz: ', activity('findInvalidatedRows').output.firstRow.dataInvalidaz\n)\n",
            "type": "Expression"
          }
        }
      }
    ]
  }
}
