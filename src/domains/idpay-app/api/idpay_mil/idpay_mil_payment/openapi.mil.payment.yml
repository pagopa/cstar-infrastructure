openapi: 3.0.1
info:
  title: IDPAY MIL PAYMENT API
  description: IDPAY MIL PAYMENT API
  version: '1.0.1'
servers:
  - url: https://api-io.dev.cstar.pagopa.it/idpay/mil/payment
paths:
  /:
    post:
      tags:
        - payment
      summary: Create a transaction
      operationId: createGenericTransaction
      parameters:
        - name: x-merchant-fiscalcode
          in: header
          schema:
            type: string
            example: merchant-fiscalcode
          required: true
        - name: x-acquirer-id
          in: header
          schema:
            type: string
            example: acquirer-id
          required: true
      requestBody:
        description: General information about Transaction
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TransactionCreationRequest'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionGenericResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDTO'
              example:
                code: "INVALID_REQUEST"
                message: "Required request header 'x-acquirer-id' for method parameter type String is not present"
        '404':
          description: Transaction not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDTO'
  '/idpay-code/{transactionId}/preview':
    put:
      tags:
        - payment
      summary: 'ENG: Pre Authorize payment Preview - IT: Preautorizzazione pagamento'
      operationId: putPreviewPreAuthPayment
      parameters:
        - name: transactionId
          in: path
          description: 'ENG: The transaction''s id - IT: Id della transazione'
          required: true
          schema:
            type: string
        - name: x-acquirer-id
          in: header
          schema:
            type: string
            example: acquirer-id
          required: true
        - name: x-merchant-fiscalcode
          in: header
          schema:
            type: string
            example: merchant-fiscalcode
          required: true
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PreAuthPaymentResponseDTO'
        '400':
          description: Transaction is not CREATED or IDENTIFIED
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionErrorDTO'
              examples:
                PAYMENT_STATUS_NOT_VALID:
                  value:
                    code: "PAYMENT_STATUS_NOT_VALID"
                    message: "Cannot relate transaction [%s] in status [%s]"
                PAYMENT_STATUS_NOT_VALID_2:
                  value:
                    code: "PAYMENT_STATUS_NOT_VALID"
                    message: "Cannot cancel a confirmed transaction"
                PAYMENT_STATUS_NOT_VALID_3:
                  value:
                    code: "PAYMENT_STATUS_NOT_VALID"
                    message: "Cannot unrelate a transaction not in status IDENTIFIED"
                PAYMENT_STATUS_NOT_VALID_4:
                  value:
                    code: "PAYMENT_STATUS_NOT_VALID"
                    message: "Unexpected status for transaction with transactionId [%s]"
                PAYMENT_STATUS_NOT_VALID_5:
                  value:
                    code: "PAYMENT_STATUS_NOT_VALID"
                    message: "Cannot confirm transaction having id [%s]: actual status is [%s]"
                PAYMENT_AMOUNT_NOT_VALID:
                  value:
                    code: "PAYMENT_AMOUNT_NOT_VALID"
                    message: "Cannot create transaction with invalid amount: [%s]"
                PAYMENT_AMOUNT_NOT_VALID_2:
                  value:
                    code: "PAYMENT_AMOUNT_NOT_VALID"
                    message: "Cannot authorize transaction with invalid amount [%s]"
                PAYMENT_TRANSACTION_EXPIRED:
                  value:
                    code: "PAYMENT_TRANSACTION_EXPIRED"
                    message: "Cannot cancel expired transaction"
        '401':
          description: Token not validated correctly
        '403':
          description: 'Transaction is associated to another user, or transaction rejected'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionErrorDTO'
              examples:
                PAYMENT_BUDGET_EXHAUSTED:
                  value:
                    code: "PAYMENT_BUDGET_EXHAUSTED"
                    message: "The budget related to the user on initiativeId [%s] was exhausted"
                PAYMENT_GENERIC_REJECTED:
                  value:
                    code: "PAYMENT_GENERIC_REJECTED"
                    message: "Transaction with trxCode [%s] is rejected"
                PAYMENT_ALREADY_AUTHORIZED:
                  value:
                    code: "PAYMENT_ALREADY_AUTHORIZED"
                    message: "Transaction with trxCode [%s] is already authorized"
                PAYMENT_MERCHANT_NOT_ALLOWED:
                  value:
                    code: "PAYMENT_MERCHANT_NOT_ALLOWED"
                    message: "Requesting merchant is not allowed to operate on the transaction"
                PAYMENT_USER_SUSPENDED:
                  value:
                    code: "PAYMENT_USER_SUSPENDED"
                    message: "The user has been suspended for initiative [%s]"
                PAYMENT_USER_NOT_VALID:
                  value:
                    code: "PAYMENT_USER_NOT_VALID"
                    message: "Requesting user is not allowed to operate on the transaction"
                PAYMENT_USER_NOT_VALID_2:
                  value:
                    code: "PAYMENT_USER_NOT_VALID"
                    message: "Transaction with trxCode [%s] is already assigned to another user"
                PAYMENT_USER_NOT_VALID_3:
                  value:
                    code: "PAYMENT_USER_NOT_VALID"
                    message: "User does not exist"
                PAYMENT_USER_UNSUBSCRIBED:
                  value:
                    code: "PAYMENT_USER_UNSUBSCRIBED"
                    message: "The user has unsubscribed from initiative [%s]"
                PAYMENT_USER_NOT_ONBOARDED:
                  value:
                    code: "PAYMENT_USER_NOT_ONBOARDED"
                    message: "The user is not onboarded on initiative [%s]"
                PAYMENT_MERCHANT_OR_ACQUIRER_NOT_ALLOWED:
                  value:
                    code: "PAYMENT_MERCHANT_OR_ACQUIRER_NOT_ALLOWED"
                    message: "The merchant id of the trx, is not equals to the merchant id"
                PAYMENT_MERCHANT_OR_ACQUIRER_NOT_ALLOWED_2:
                  value:
                    code: "PAYMENT_MERCHANT_OR_ACQUIRER_NOT_ALLOWED"
                    message: "Requesting merchantId (%s through acquirer %s) not allowed to operate on transaction"
                PAYMENT_INVALID_PINBLOCK:
                  value:
                    code: "PAYMENT_INVALID_PINBLOCK"
                    message: "The Pinblock is incorrect"
                PAYMENT_INITIATIVE_INVALID_DATE:
                  value:
                    code: "PAYMENT_INITIATIVE_INVALID_DATE"
                    message: "Cannot create transaction out of valid period. Initiative startDate: [%s] endDate: [%s]"
        '404':
          description: Transaction does not exist or is expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionErrorDTO'
              examples:
                PAYMENT_NOT_FOUND_EXPIRED:
                  value:
                    code: "PAYMENT_NOT_FOUND_EXPIRED"
                    message: "Cannot find transaction with trxCode [%s]"
                PAYMENT_NOT_FOUND_EXPIRED_2:
                  value:
                    code: "PAYMENT_NOT_FOUND_EXPIRED"
                    message: "Cannot find the transaction with the specified ID"
                PAYMENT_NOT_FOUND_EXPIRED_3:
                  value:
                    code: "PAYMENT_NOT_FOUND_EXPIRED"
                    message: "Cannot find the transaction with the specified code"
                PAYMENT_NOT_FOUND_EXPIRED_4:
                  value:
                    code: "PAYMENT_NOT_FOUND_EXPIRED"
                    message: "Transaction does not exist"
                PAYMENT_NOT_FOUND_EXPIRED_5:
                  value:
                    code: "PAYMENT_NOT_FOUND_EXPIRED"
                    message: "Resource not found on reward-calculator"
                PAYMENT_NOT_FOUND_EXPIRED_6:
                  value:
                    code: "PAYMENT_NOT_FOUND_EXPIRED"
                    message: "Transaction does not exist"
                PAYMENT_MERCHANT_NOT_FOUND:
                  value:
                    code: "PAYMENT_MERCHANT_NOT_FOUND"
                    message: "The merchant is not related with initiative [%s]"
                PAYMENT_INITIATIVE_NOT_FOUND:
                  value:
                    code: "PAYMENT_INITIATIVE_NOT_FOUND"
                    message: "Cannot find initiative with ID: [%s]"
                PAYMENT_INITIATIVE_NOT_DISCOUNT:
                  value:
                    code: "PAYMENT_INITIATIVE_NOT_DISCOUNT"
                    message: "Cannot find initiative with ID: [%s]"
                PAYMENT_IDPAYCODE_NOT_FOUND:
                  value:
                    code: "PAYMENT_IDPAYCODE_NOT_FOUND"
                    message: "There is not a idpaycode for the current user"
        '429':
          description: Too many Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionErrorDTO'
              example:
                code: "PAYMENT_TOO_MANY_REQUESTS"
                message: "too many requests"
        '500':
          description: Generic error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionErrorDTO'
              examples:
                PAYMENT_GENERIC_ERROR:
                  value:
                    code: "PAYMENT_GENERIC_ERROR"
                    message: "An error occurred during decryption"
                PAYMENT_GENERIC_ERROR_2:
                  value:
                    code: "PAYMENT_GENERIC_ERROR"
                    message: "An error occurred during encryption"
                PAYMENT_GENERIC_ERROR_3:
                  value:
                    code: "PAYMENT_GENERIC_ERROR"
                    message: "An error occurred in the microservice merchant"
                PAYMENT_GENERIC_ERROR_4:
                  value:
                    code: "PAYMENT_GENERIC_ERROR"
                    message: "An error occurred in the microservice reward-calculator"
                PAYMENT_GENERIC_ERROR_5:
                  value:
                    code: "PAYMENT_GENERIC_ERROR"
                    message: "An error occurred in the microservice wallet"
                PAYMENT_GENERIC_ERROR_6:
                  value:
                    code: "PAYMENT_GENERIC_ERROR"
                    message: "An error occurred in the microservice payment-instrument"
  '/idpay-code/{transactionId}/authorize':
    put:
      tags:
        - payment
      summary: 'ENG: Authorize payment - IT: Autorizzazione pagamento'
      operationId: putAuthPayment
      parameters:
        - name: transactionId
          in: path
          description: 'ENG: The transaction''s id - IT: Id della transazione'
          required: true
          schema:
            type: string
        - name: x-acquirer-id
          in: header
          schema:
            type: string
            example: acquirer-id
          required: true
        - name: x-merchant-fiscalcode
          in: header
          schema:
            type: string
            example: merchant-fiscalcode
          required: true
      requestBody:
        description: PinBlock
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PinBlockDTO'
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthPaymentResponseDTO'
        '400':
          description: Transaction is not CREATED or IDENTIFIED
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionErrorDTO'
              examples:
                PAYMENT_STATUS_NOT_VALID:
                  value:
                    code: "PAYMENT_STATUS_NOT_VALID"
                    message: "Cannot relate transaction [%s] in status [%s]"
                PAYMENT_STATUS_NOT_VALID_2:
                  value:
                    code: "PAYMENT_STATUS_NOT_VALID"
                    message: "Cannot cancel a confirmed transaction"
                PAYMENT_STATUS_NOT_VALID_3:
                  value:
                    code: "PAYMENT_STATUS_NOT_VALID"
                    message: "Cannot unrelate a transaction not in status IDENTIFIED"
                PAYMENT_STATUS_NOT_VALID_4:
                  value:
                    code: "PAYMENT_STATUS_NOT_VALID"
                    message: "Unexpected status for transaction with transactionId [%s]"
                PAYMENT_STATUS_NOT_VALID_5:
                  value:
                    code: "PAYMENT_STATUS_NOT_VALID"
                    message: "Cannot confirm transaction having id [%s]: actual status is [%s]"
                PAYMENT_AMOUNT_NOT_VALID:
                  value:
                    code: "PAYMENT_AMOUNT_NOT_VALID"
                    message: "Cannot create transaction with invalid amount: [%s]"
                PAYMENT_AMOUNT_NOT_VALID_2:
                  value:
                    code: "PAYMENT_AMOUNT_NOT_VALID"
                    message: "Cannot authorize transaction with invalid amount [%s]"
                PAYMENT_TRANSACTION_EXPIRED:
                  value:
                    code: "PAYMENT_TRANSACTION_EXPIRED"
                    message: "Cannot cancel expired transaction"
        '401':
          description: Token not validated correctly
        '403':
          description: 'Transaction is associated to another user, or transaction rejected'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionErrorDTO'
              examples:
                PAYMENT_BUDGET_EXHAUSTED:
                  value:
                    code: "PAYMENT_BUDGET_EXHAUSTED"
                    message: "The budget related to the user on initiativeId [%s] was exhausted"
                PAYMENT_GENERIC_REJECTED:
                  value:
                    code: "PAYMENT_GENERIC_REJECTED"
                    message: "Transaction with trxCode [%s] is rejected"
                PAYMENT_ALREADY_AUTHORIZED:
                  value:
                    code: "PAYMENT_ALREADY_AUTHORIZED"
                    message: "Transaction with trxCode [%s] is already authorized"
                PAYMENT_MERCHANT_NOT_ALLOWED:
                  value:
                    code: "PAYMENT_MERCHANT_NOT_ALLOWED"
                    message: "Requesting merchant is not allowed to operate on the transaction"
                PAYMENT_USER_SUSPENDED:
                  value:
                    code: "PAYMENT_USER_SUSPENDED"
                    message: "The user has been suspended for initiative [%s]"
                PAYMENT_USER_NOT_VALID:
                  value:
                    code: "PAYMENT_USER_NOT_VALID"
                    message: "Requesting user is not allowed to operate on the transaction"
                PAYMENT_USER_NOT_VALID_2:
                  value:
                    code: "PAYMENT_USER_NOT_VALID"
                    message: "Transaction with trxCode [%s] is already assigned to another user"
                PAYMENT_USER_NOT_VALID_3:
                  value:
                    code: "PAYMENT_USER_NOT_VALID"
                    message: "User does not exist"
                PAYMENT_USER_UNSUBSCRIBED:
                  value:
                    code: "PAYMENT_USER_UNSUBSCRIBED"
                    message: "The user has unsubscribed from initiative [%s]"
                PAYMENT_USER_NOT_ONBOARDED:
                  value:
                    code: "PAYMENT_USER_NOT_ONBOARDED"
                    message: "The user is not onboarded on initiative [%s]"
                PAYMENT_MERCHANT_OR_ACQUIRER_NOT_ALLOWED:
                  value:
                    code: "PAYMENT_MERCHANT_OR_ACQUIRER_NOT_ALLOWED"
                    message: "The merchant id of the trx, is not equals to the merchant id"
                PAYMENT_MERCHANT_OR_ACQUIRER_NOT_ALLOWED_2:
                  value:
                    code: "PAYMENT_MERCHANT_OR_ACQUIRER_NOT_ALLOWED"
                    message: "Requesting merchantId (%s through acquirer %s) not allowed to operate on transaction"
                PAYMENT_INVALID_PINBLOCK:
                  value:
                    code: "PAYMENT_INVALID_PINBLOCK"
                    message: "The Pinblock is incorrect"
                PAYMENT_INITIATIVE_INVALID_DATE:
                  value:
                    code: "PAYMENT_INITIATIVE_INVALID_DATE"
                    message: "Cannot create transaction out of valid period. Initiative startDate: [%s] endDate: [%s]"
        '404':
          description: Transaction does not exist or is expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionErrorDTO'
              examples:
                PAYMENT_NOT_FOUND_EXPIRED:
                  value:
                    code: "PAYMENT_NOT_FOUND_EXPIRED"
                    message: "Cannot find transaction with trxCode [%s]"
                PAYMENT_NOT_FOUND_EXPIRED_2:
                  value:
                    code: "PAYMENT_NOT_FOUND_EXPIRED"
                    message: "Cannot find the transaction with the specified ID"
                PAYMENT_NOT_FOUND_EXPIRED_3:
                  value:
                    code: "PAYMENT_NOT_FOUND_EXPIRED"
                    message: "Cannot find the transaction with the specified code"
                PAYMENT_NOT_FOUND_EXPIRED_4:
                  value:
                    code: "PAYMENT_NOT_FOUND_EXPIRED"
                    message: "Transaction does not exist"
                PAYMENT_NOT_FOUND_EXPIRED_5:
                  value:
                    code: "PAYMENT_NOT_FOUND_EXPIRED"
                    message: "Resource not found on reward-calculator"
                PAYMENT_NOT_FOUND_EXPIRED_6:
                  value:
                    code: "PAYMENT_NOT_FOUND_EXPIRED"
                    message: "Transaction does not exist"
                PAYMENT_MERCHANT_NOT_FOUND:
                  value:
                    code: "PAYMENT_MERCHANT_NOT_FOUND"
                    message: "The merchant is not related with initiative [%s]"
                PAYMENT_INITIATIVE_NOT_FOUND:
                  value:
                    code: "PAYMENT_INITIATIVE_NOT_FOUND"
                    message: "Cannot find initiative with ID: [%s]"
                PAYMENT_INITIATIVE_NOT_DISCOUNT:
                  value:
                    code: "PAYMENT_INITIATIVE_NOT_DISCOUNT"
                    message: "Cannot find initiative with ID: [%s]"
                PAYMENT_IDPAYCODE_NOT_FOUND:
                  value:
                    code: "PAYMENT_IDPAYCODE_NOT_FOUND"
                    message: "There is not a idpaycode for the current user"
        '429':
          description: Too many Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionErrorDTO'
              example:
                code: "PAYMENT_TOO_MANY_REQUESTS"
                message: "too many requests"
        '500':
          description: Generic error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionErrorDTO'
              examples:
                PAYMENT_GENERIC_ERROR:
                  value:
                    code: "PAYMENT_GENERIC_ERROR"
                    message: "An error occurred during decryption"
                PAYMENT_GENERIC_ERROR_2:
                  value:
                    code: "PAYMENT_GENERIC_ERROR"
                    message: "An error occurred during encryption"
                PAYMENT_GENERIC_ERROR_3:
                  value:
                    code: "PAYMENT_GENERIC_ERROR"
                    message: "An error occurred in the microservice merchant"
                PAYMENT_GENERIC_ERROR_4:
                  value:
                    code: "PAYMENT_GENERIC_ERROR"
                    message: "An error occurred in the microservice reward-calculator"
                PAYMENT_GENERIC_ERROR_5:
                  value:
                    code: "PAYMENT_GENERIC_ERROR"
                    message: "An error occurred in the microservice wallet"
                PAYMENT_GENERIC_ERROR_6:
                  value:
                    code: "PAYMENT_GENERIC_ERROR"
                    message: "An error occurred in the microservice payment-instrument"

  '/publickey':
    get:
      tags:
        - payment
      summary: 'ENG: IdPay public key - IT: Chiave pubblica IdPay'
      operationId: getPublicKey
      parameters:
        - name: x-acquirer-id
          in: header
          schema:
            type: string
            example: acquirer-id
          required: true
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PublicKeyDTO'
        '401':
          description: Token not validated correctly
  /{transactionId}/status:
    get:
      tags:
        - payment
      summary: Returns the detail of a transaction
      operationId: getStatusTransaction
      parameters:
        - name: transactionId
          in: path
          description: The initiative ID
          required: true
          schema:
            type: string
        - name: x-merchant-fiscalcode
          in: header
          description: Merchant fiscal code
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SyncTrxStatus'
        '403':
          description: Transaction is associated to another user
        '404':
          description: Transaction does not exist
  /{transactionId}:
    delete:
      tags:
        - payment
      summary: Merchant delete transaction
      operationId: deleteTransaction
      parameters:
        - name: transactionId
          in: path
          description: The transaction ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Ok
        '403':
          description: Merchant not allowed to operate on this transaction
        '404':
          description: Transaction does not exist
        '429':
          description: Too many Request
components:
  schemas:
    TransactionCreationRequest:
      type: object
      required:
        - initiativeId
        - amountCents
        - idTrxAcquirer
      properties:
        initiativeId:
          type: string
        amountCents:
          type: integer
          format: int64
        mcc:
          type: string
        idTrxAcquirer:
          type: string
    TransactionGenericResponse:
      type: object
      required:
        - id
        - trxCode
        - initiativeId
        - merchantId
        - idTrxAcquirer
        - trxDate
        - amountCents
        - amountCurrency
        - acquirerId
        - status
      properties:
        id:
          type: string
        trxCode:
          type: string
        initiativeId:
          type: string
        merchantId:
          type: string
        idTrxAcquirer:
          type: string
        trxDate:
          type: string
          format: date-time
        trxExpirationMinutes:
          type: number
        amountCents:
          type: integer
          format: int64
        amountCurrency:
          type: string
        mcc:
          type: string
        acquirerId:
          type: string
        status:
          type: string
          enum:
            - CREATED
            - IDENTIFIED
            - AUTHORIZED
            - REWARDED
            - REJECTED
        merchantFiscalCode:
          type: string
        vat:
          type: string
        splitPayment:
          type: boolean
        residualAmountCents:
          type: integer
          format: int64
        trxPngUrl:
          type: string
        trxTxtUrl:
          type: string
    SyncTrxStatus:
      type: object
      required:
        - id
        - idTrxIssuer
        - trxCode
        - trxDate
        - operationType
        - amountCents
        - amountCurrency
        - acquirerId
        - merchantId
        - initiativeId
        - status
      properties:
        id:
          type: string
        idTrxIssuer:
          type: string
        trxCode:
          type: string
        trxDate:
          type: string
          format: date-time
        authDate:
          type: string
          format: date-time
        operationType:
          type: string
          enum: [CHARGE, REFUND]
        amountCents:
          type: integer
          format: int64
        amountCurrency:
          type: string
        mcc:
          type: string
        acquirerId:
          type: string
        merchantId:
          type: string
        initiativeId:
          type: string
        rewardCents:
          type: integer
          format: int64
        rejectionReasons:
          type: array
          items:
            type: string
          description: The list of rejection reasons
        status:
          type: string
          enum: [CREATED, IDENTIFIED, AUTHORIZED, REWARDED, REJECTED]
    ErrorDTO:
      type: object
      properties:
        code:
          type: string
        message:
          type: string
    PreAuthPaymentResponseDTO:
      type: object
      required:
        - id
        - trxCode
        - initiativeId
        - status
        - amountCents
        - secondFactor
      properties:
        id:
          type: string
          description: 'ENG: Id of the payment - IT: Identificativo del pagamento'
          example:
            "1eec4867-0668-4029-9279-b60956889664_1697186296923"
        trxCode:
          type: string
          description: 'ENG: Transaction code (8 alphanumeric character) - IT: Codice della  transazione (8 caratteri alfanumerici)'
          example:
            "s3bu7fnl"
        trxDate:
          type: string
          format: date-time
          description: 'ENG: Transaction date - IT: Data della transazione'
        initiativeId:
          type: string
          description: 'ENG: Id of the initiative - IT: Identificativo dell''iniziativa'
        initiativeName:
          type: string
          description: 'ENG: Name of the initiative - IT: Nome della iniziativa'
        businessName:
          type: string
          description: 'ENG: Business name - IT: Nome dell''esercente'
        status:
          type: string
          enum:
            - CREATED
            - IDENTIFIED
            - AUTHORIZED
          description: >-
            ENG: Status of the payment [CREATED: Created, IDENTIFIED: User
            related, AUTHORIZED: authorized] - IT: Stato del pagamento [CREATED:
            Creato, IDENTIFIED: Utente associato, AUTHORIZED: autorizzato]
        reward:
          type: integer
          format: int64
          description: 'ENG: Reward - IT: Premio generato'
        amountCents:
          type: integer
          format: int64
          description: 'ENG: Amount cents - IT: Importo in centessimi'
        residualBudget:
          type: number
          description: 'ENG: Residual budget - IT: Budget residuo'
        secondFactor:
          type: string
          example:
            00006fbdd98ab6dd
          description: 'ENG: second factor (16 alphanumeric character) - IT: second factor (16 caratteri alfanumerici)'
    AuthPaymentResponseDTO:
      type: object
      required:
        - id
        - trxCode
        - initiativeId
        - status
        - amountCents
      properties:
        id:
          type: string
          description: 'ENG: Id of the payment - IT: Identificativo del pagamento'
        trxCode:
          type: string
          description: 'ENG: Transaction code - IT: Codice della transazione'
        trxDate:
          type: string
          format: date-time
          description: 'ENG: Transaction date - IT: Data della transazione'
        initiativeId:
          type: string
          description: 'ENG: Id of the initiative - IT: Identificativo dell''iniziativa'
        initiativeName:
          type: string
          description: 'ENG: Name of the initiative - IT: Nome della iniziativa'
        businessName:
          type: string
          description: 'ENG: Business name - IT: Nome dell''esercente'
        status:
          type: string
          enum:
            - CREATED
            - IDENTIFIED
            - AUTHORIZED
          description: >-
            ENG: Status of the payment [CREATED: Created, IDENTIFIED: User
            related, AUTHORIZED: authorized] - IT: Stato del pagamento [CREATED:
            Creato, IDENTIFIED: Utente associato, AUTHORIZED: autorizzato]
        reward:
          type: integer
          format: int64
          description: 'ENG: Reward - IT: Premio generato'
        amountCents:
          type: integer
          format: int64
          description: 'ENG: Amount cents - IT: Importo in centessimi'
        residualBudget:
          type: number
          description: 'ENG: Residual budget - IT: Budget residuo'
    PinBlockDTO:
      type: object
      required:
        - pinBlock
        - encryptedKey
      properties:
        pinBlock:
          type: string
          description: 'ENG: EncryptedPinBlock'
        encryptedKey:
          type: string
          description: 'ENG: EncryptedKey'
    TransactionErrorDTO:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: string
          enum:
            - PAYMENT_NOT_FOUND_EXPIRED
            - PAYMENT_USER_NOT_VALID
            - PAYMENT_STATUS_NOT_VALID
            - PAYMENT_ALREADY_AUTHORIZED
            - PAYMENT_BUDGET_EXHAUSTED
            - PAYMENT_GENERIC_REJECTED
            - PAYMENT_TOO_MANY_REQUESTS
            - PAYMENT_GENERIC_ERROR
            - PAYMENT_USER_SUSPENDED
            - PAYMENT_INVALID_PINBLOCK
          description: >-
            "ENG: Error code: PAYMENT_NOT_FOUND_EXPIRED: transaction not found
            or expired, PAYMENT_USER_NOT_VALID: user not valid,
            PAYMENT_STATUS_NOT_VALID: status not valid,
            PAYMENT_ALREADY_AUTHORIZED: transaction already authorized,
            PAYMENT_BUDGET_EXHAUSTED: budget exhausted,
            PAYMENT_GENERIC_REJECTED: generic rejected error,
            PAYMENT_TOO_MANY_REQUESTS: too many request, PAYMENT_GENERIC_ERROR:
            generic error, PAYMENT_USER_SUSPENDED: the user has been suspended
            on the initiative - IT: Codice di errore PAYMENT_NOT_FOUND_EXPIRED:
            transazione non trovata oppure caducata, PAYMENT_USER_NOT_VALID:
            utente no valido, PAYMENT_STATUS_NOT_VALID: stato non valido,
            PAYMENT_ALREADY_AUTHORIZED: transazione già autorizzata,
            PAYMENT_BUDGET_EXHAUSTED: budget esaurito, PAYMENT_GENERIC_REJECTED:
            errore generico di rifiuto, PAYMENT_TOO_MANY_REQUESTS: troppe
            richieste, PAYMENT_GENERIC_ERROR: errore generico,
            PAYMENT_USER_SUSPENDED: l'utente è stato sospeso sull'iniziativa"
        message:
          type: string
          description: 'ENG: Error message- IT: Messaggio di errore'
    PublicKeyDTO:
      type: object
      required:
        - kid
        - kty
        - key_ops
        - n
        - e
        - iat
      properties:
        kid:
          type: string
          description: 'ENG: Key identifier.'
        kty:
          type: string
          description: 'ENG: JsonWebKey Key Type (RSA)'
        key_ops:
          type: array
          items:
            type: string
          description: 'ENG: Supported key operations (encrypt, decrypt).'
        n:
          type: string
          description: 'ENG: RSA modulus.'
        e:
          type: string
          description: 'ENG: RSA public exponent.'
        iat:
          type: number
          description: 'ENG: Creation time in UTC.'
        exp:
          type: number
          description: 'ENG: Expiry date in UTC.'
  securitySchemes:
    Bearer:
      type: apiKey
      name: Authorization
      in: header
security:
  - Bearer: []
