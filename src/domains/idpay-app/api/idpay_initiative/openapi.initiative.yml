openapi: 3.0.1
info:
  title: IDPAY Welfare Portal Initiative API
  description: IDPAY Welfare Portal Initiative
  version: '1.0'
servers:
  - url: https://api-io.dev.cstar.pagopa.it/idpay/initiative
paths:
  '/{initiativeId}/beneficiary/view':
    get:
      tags:
        - initiative
      summary: Returns the detail of an active initiative
      operationId: getInitiativeBeneficiaryView
      parameters:
        - name: initiativeId
          in: path
          description: The initiative ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InitiativeDTO'
        '401':
          description: Authentication failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDTO'
        '404':
          description: The requested ID was not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDTO'
        '429':
          description: Too many Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDTO'
        '500':
          description: Server ERROR
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDTO'
  /summary:
    get:
      tags:
        - initiative
      summary: Returns the list of initiatives names for a specific organization
      description: Returns the list of initiatives names for a specific organization
      operationId: getInitativeSummary
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InitiativeSummaryArrayDTO'
        '401':
          description: Authentication failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDTO'
        '429':
          description: Too many Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDTO'
        '500':
          description: Server ERROR
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDTO'
  /config/beneficiary/rule:
    get:
      tags:
        - initiative
      summary: Returns fixed automated Criteria
      description: Returns fixed automated Criteria
      operationId: getBeneficiaryConfigRules
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfigBeneficiaryRuleArrayDTO'
              example:
                - code: ISEE
                  authority: INPS
                  operator: EQ
                  checked: false
                - code: BIRTHDATE
                  authority: AUTH1
                  field: Year
                  operator: EQ
                  checked: false
                - code: RESIDENCE
                  authority: AUTH2
                  field: City
                  operator: EQ
                  checked: false
  /config/transaction/rule:
    get:
      tags:
        - initiative
      summary: Return transaction config rules content
      description: Return transaction config rules content
      operationId: getTransactionConfigRules
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfigTrxRuleArrayDTO'
        '401':
          description: Authentication failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDTO'
        '404':
          description: The requested ID was not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDTO'
        '429':
          description: Too many Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDTO'
        '500':
          description: Server ERROR
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDTO'
  /config/transaction/mcc:
    get:
      tags:
        - initiative
      summary: Return MCC config contents
      description: Return MCC config contents
      operationId: getMccConfig
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfigMccArrayDTO'
        '401':
          description: Authentication failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDTO'
        '404':
          description: The requested ID was not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDTO'
        '429':
          description: Too many Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDTO'
        '500':
          description: Server ERROR
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDTO'
  /{initiativeId}/statistics:
    get:
      tags:
        - initiative
      summary: Return of onboard users and the budget spent (accrued bonus)
      operationId: initiativeStatistics
      parameters:
        - name: initiativeId
          in: path
          description: The initiative ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InitiativeStatisticsDTO'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDTO'
        '401':
          description: Authentication failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDTO'
        '404':
          description: The requested ID was not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDTO'
        '429':
          description: Too many Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDTO'
        '500':
          description: Server ERROR
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDTO'
  /{initiativeId}/onboardings:
    get:
      tags:
        - initiative-onboarding
      summary: Returns the onbordings status
      description: Returns the onbordings status
      operationId: getOnboardingStatus
      parameters:
        - name: initiativeId
          in: path
          description: The initiative ID
          required: true
          schema:
            type: string
        - name: page
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: size
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: sort
          in: query
          required: false
          schema:
            type: string
        - name: beneficiary
          in: query
          description: Fiscale code
          required: false
          schema:
            type: string
        - name: dateFrom
          in: query
          description: Start date
          required: false
          schema:
            type: string
        - name: dateTo
          in: query
          description: End date
          required: false
          schema:
            type: string
        - name: state
          in: query
          description: onboarding state
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OnboardingDTO'
        '401':
          description: Authentication failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDTO'
        '404':
          description: The requested ID was not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDTO'
        '429':
          description: Too many Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDTO'
        '500':
          description: Server ERROR
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDTO'
  /{initiativeId}:
    get:
      tags:
        - initiative
      summary: Returns the detail of an active initiative
      description: Returns the detail of an active initiative
      operationId: getInitiativeDetail
      parameters:
        - name: initiativeId
          in: path
          description: The initiative ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InitiativeDTO'
        '401':
          description: Authentication failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDTO'
        '404':
          description: The requested ID was not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDTO'
        '429':
          description: Too many Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDTO'
        '500':
          description: Server ERROR
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDTO'
    delete:
      tags:
        - initiative
      summary: Logically Delete Initiative
      operationId: logicallyDeleteInitiative
      parameters:
        - name: initiativeId
          in: path
          description: The initiative ID
          required: true
          schema:
            type: string
      responses:
        '204':
          description: No Content
          content:
            application/json: {}
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDTO'
        '401':
          description: Authentication failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDTO'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDTO'
        '404':
          description: Initiative ID not found or already deleted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDTO'
        '429':
          description: Too many Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDTO'
        '500':
          description: Server ERROR
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDTO'
  /{initiativeId}/logo:
    put:
      tags:
        - initiative
      summary: Upload and update Logo
      description: Upload and update Logo
      operationId: uploadAndUpdateLogo
      parameters:
        - name: initiativeId
          in: path
          description: The initiative ID
          required: true
          schema:
            type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              required:
              - logo
              type: object
              properties:
                logo:
                  type: string
                  format: binary
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogoDTO'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDTO'
        '401':
          description: Authentication failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDTO'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDTO'
        '404':
          description: The requested ID was not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDTO'
        '429':
          description: Too many Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDTO'
        '500':
          description: Server ERROR
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDTO'
  /info:
    post:
      tags:
        - initiative
      summary: Save initiative and first subset of data 'service info'
      description: Save initiative and first subset of data 'service info'
      operationId: saveInitiativeServiceInfo
      requestBody:
        description: Unique identifier of the subscribed initiative, IBAN of the citizen
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InitiativeAdditionalDTO'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InitiativeDTO'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDTO'
        '401':
          description: Authentication failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDTO'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDTO'
        '404':
          description: The requested ID was not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDTO'
        '429':
          description: Too many Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDTO'
        '500':
          description: Server ERROR
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDTO'
  /{initiativeId}/info:
    put:
      tags:
        - initiative
      summary: Save initiative and first subset of data 'service info'
      description: Save initiative and first subset of data 'service info'
      operationId: updateInitiativeServiceInfo
      parameters:
        - name: initiativeId
          in: path
          description: The initiative ID
          required: true
          schema:
            type: string
      requestBody:
        description: Unique identifier of the subscribed initiative, IBAN of the citizen
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InitiativeAdditionalDTO'
      responses:
        '204':
          description: No Content
          content:
            application/json: {}
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDTO'
        '401':
          description: Authentication failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDTO'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDTO'
        '404':
          description: The requested ID was not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDTO'
        '429':
          description: Too many Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDTO'
        '500':
          description: Server ERROR
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDTO'
  /{initiativeId}/general:
    put:
      tags:
        - initiative
      summary: Update initiative and subset of data 'general info'
      description: Update initiative and first subset of data 'general info'
      operationId: updateInitiativeGeneralInfo
      parameters:
        - name: initiativeId
          in: path
          description: The initiative ID
          required: true
          schema:
            type: string
      requestBody:
        description: Unique identifier of the subscribed initiative, IBAN of the citizen
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InitiativeGeneralDTO'
      responses:
        '204':
          description: No Content
          content:
            application/json: {}
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDTO'
        '401':
          description: Authentication failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDTO'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDTO'
        '404':
          description: The requested ID was not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDTO'
        '429':
          description: Too many Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDTO'
        '500':
          description: Server ERROR
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDTO'
  /{initiativeId}/beneficiary:
    put:
      tags:
        - initiative
      summary: Association of beneficiary rules to an initiative
      description: Association of beneficiary rules to an initiative
      operationId: updateInitiativeBeneficiary
      parameters:
        - name: initiativeId
          in: path
          description: The initiative ID
          required: true
          schema:
            type: string
      requestBody:
        description: Unique identifier of the subscribed initiative, instrument HPAN
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InitiativeBeneficiaryRuleDTO'
      responses:
        '204':
          description: No Content
          content:
            application/json: {}
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDTO'
        '401':
          description: Authentication failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDTO'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDTO'
        '404':
          description: The requested ID was not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDTO'
        '429':
          description: Too many Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDTO'
        '500':
          description: Server ERROR
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDTO'
  /{initiativeId}/reward:
    put:
      tags:
        - initiative
      summary: Association of transaction and reward rules to an initiative
      operationId: updateTrxAndRewardRules
      parameters:
        - name: initiativeId
          in: path
          description: The initiative ID
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InitiativeRewardAndTrxRulesDTO'
        required: true
      responses:
        '204':
          description: No Content
          content:
            application/json: {}
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDTO'
        '401':
          description: Authentication failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDTO'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDTO'
        '404':
          description: The requested ID was not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDTO'
        '429':
          description: Too many Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDTO'
        '500':
          description: Server ERROR
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDTO'
  /{initiativeId}/refund:
    put:
      tags:
        - initiative
      summary: Save the refund rule of the initiative
      operationId: updateInitiativeRefundRule
      parameters:
        - name: initiativeId
          in: path
          description: The initiative ID
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InitiativeRefundRuleDTO'
        required: true
      responses:
        '204':
          description: No Content
          content:
            application/json: {}
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDTO'
        '401':
          description: Authentication failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDTO'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDTO'
        '404':
          description: The requested ID was not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDTO'
        '429':
          description: Too many Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDTO'
        '500':
          description: Server ERROR
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDTO'
  /{initiativeId}/general/draft:
    put:
      tags:
        - initiative
      summary: Update initiative and subset of data 'general info'
      description: Update initiative and first subset of data 'general info'
      operationId: updateInitiativeGeneralInfoDraft
      parameters:
        - name: initiativeId
          in: path
          description: The initiative ID
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InitiativeGeneralDTO'
      responses:
        '204':
          description: No Content
          content:
            application/json: {}
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDTO'
        '401':
          description: Authentication failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDTO'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDTO'
        '404':
          description: The requested ID was not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDTO'
        '429':
          description: Too many Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDTO'
        '500':
          description: Server ERROR
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDTO'
  /{initiativeId}/beneficiary/draft:
    put:
      tags:
        - initiative
      summary: Association of beneficiary rules to a draft initiative without validation
      description: Association of beneficiary rules to a draft initiative without validation
      operationId: updateInitiativeBeneficiaryDraft
      parameters:
        - name: initiativeId
          in: path
          description: The initiative ID
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InitiativeBeneficiaryRuleDTO'
      responses:
        '204':
          description: No Content
          content:
            application/json: {}
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDTO'
        '401':
          description: Authentication failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDTO'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDTO'
        '404':
          description: The requested ID was not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDTO'
        '429':
          description: Too many Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDTO'
        '500':
          description: Server ERROR
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDTO'
  /{initiativeId}/reward/draft:
    put:
      tags:
        - initiative
      summary: Association of transaction and reward rules to a draft initiative without validation
      operationId: updateTrxAndRewardRulesDraft
      parameters:
        - name: initiativeId
          in: path
          description: The initiative ID
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InitiativeRewardAndTrxRulesDTO'
        required: true
      responses:
        '204':
          description: No Content
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDTO'
        '401':
          description: Authentication failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDTO'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDTO'
        '404':
          description: The requested ID was not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDTO'
        '429':
          description: Too many Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDTO'
        '500':
          description: Server ERROR
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDTO'
  /{initiativeId}/refund/draft:
    put:
      tags:
        - initiative
      summary: Save the refund rule of the initiative in Draft
      operationId: updateInitiativeRefundRuleDraft
      parameters:
        - name: initiativeId
          in: path
          description: The initiative ID
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InitiativeRefundRuleDTO'
        required: true
      responses:
        '204':
          description: No Content
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDTO'
        '401':
          description: Authentication failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDTO'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDTO'
        '404':
          description: The requested ID was not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDTO'
        '429':
          description: Too many Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDTO'
        '500':
          description: Server ERROR
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDTO'
  /{initiativeId}/approved:
    put:
      tags:
        - initiative
      summary: Update Initiative into APPROVED Status
      operationId: updateInitiativeApprovedStatus
      parameters:
        - name: initiativeId
          in: path
          description: The initiative ID
          required: true
          schema:
            type: string
      responses:
        '204':
          description: No Content
          content:
            application/json: {}
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDTO'
        '401':
          description: Authentication failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDTO'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDTO'
        '404':
          description: The requested ID was not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDTO'
        '429':
          description: Too many Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDTO'
        '500':
          description: Server ERROR
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDTO'
  /{initiativeId}/rejected:
    put:
      tags:
        - initiative
      summary: Update Initiative into TO_CHECK Status
      operationId: updateInitiativeToCheckStatus
      parameters:
        - name: initiativeId
          in: path
          description: The initiative ID
          required: true
          schema:
            type: string
      responses:
        '204':
          description: No Content
          content:
            application/json: {}
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDTO'
        '401':
          description: Authentication failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDTO'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDTO'
        '404':
          description: The requested ID was not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDTO'
        '429':
          description: Too many Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDTO'
        '500':
          description: Server ERROR
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDTO'
  /{initiativeId}/published:
    put:
      tags:
        - initiative
      summary: Update Initiative into PUBLISHED Status
      operationId: updateInitiativePublishedStatus
      parameters:
        - name: initiativeId
          in: path
          description: The initiative ID
          required: true
          schema:
            type: string
      responses:
        '204':
          description: No Content
          content:
            application/json: {}
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDTO'
        '401':
          description: Authentication failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDTO'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDTO'
        '404':
          description: The requested ID was not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDTO'
        '429':
          description: Too many Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDTO'
        '500':
          description: Server ERROR
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDTO'
  /{initiativeId}/reward/exports:
    get:
      tags:
        - initiative-reward
      summary: Return a pageable list of reward exports notification for a specific Initiative by using filters
      operationId: getRewardNotificationExportsPaged
      parameters:
        - name: initiativeId
          in: path
          description: initiativeId
          required: true
          style: simple
          schema:
            type: string
        - name: page
          in: query
          required: false
          style: form
          schema:
            type: integer
            format: int32
        - name: size
          in: query
          required: false
          style: form
          schema:
            type: integer
            format: int32
        - name: sort
          in: query
          required: false
          style: form
          schema:
            type: string
        - name: status
          in: query
          required: false
          style: form
          schema:
            type: string
        - name: notificationDateFrom
          in: query
          required: false
          style: form
          schema:
            type: string
            format: date
        - name: notificationDateTo
          in: query
          required: false
          style: form
          schema:
            type: string
            format: date
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PageRewardExportsDTO'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDTO'
        '401':
          description: Authentication failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDTO'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDTO'
        '404':
          description: The requested ID was not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDTO'
        '429':
          description: Too many Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDTO'
        '500':
          description: Server ERROR
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDTO'
  /{initiativeId}/reward/imports:
    get:
      tags:
        - initiative-reward
      summary: Return a pageable list of reward imports notification for a specific Initiative by using filters
      operationId: getRewardNotificationImportsPaged
      parameters:
        - name: initiativeId
          in: path
          description: initiativeId
          required: true
          style: simple
          schema:
            type: string
        - name: page
          in: query
          required: false
          style: form
          schema:
            type: integer
            format: int32
        - name: size
          in: query
          required: false
          style: form
          schema:
            type: integer
            format: int32
        - name: sort
          in: query
          required: false
          style: form
          schema:
            type: string
        - name: status
          in: query
          required: false
          style: form
          schema:
            type: string
        - name: elabDateFrom
          in: query
          required: false
          style: form
          schema:
            type: string
            format: date-time
        - name: elabDateTo
          in: query
          required: false
          style: form
          schema:
            type: string
            format: date-time
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PageRewardImportsDTO'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDTO'
        '401':
          description: Authentication failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDTO'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDTO'
        '404':
          description: The requested ID was not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDTO'
        '429':
          description: Too many Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDTO'
        '500':
          description: Server ERROR
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDTO'
  /{initiativeId}/reward/exports/{filename}:
    get:
      tags:
        - initiative-reward
      summary: Return the requested filename
      operationId: getRewardFileDownload
      parameters:
        - name: initiativeId
          in: path
          description: initiativeId
          required: true
          style: simple
          schema:
            type: string
        - name: filename
          in: path
          description: filename
          required: true
          style: simple
          schema:
            type: string
      responses:
        '201':
          description: Created
          content:
           application/json:
              schema:
                $ref: '#/components/schemas/SasToken'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDTO'
        '401':
          description: Authentication failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDTO'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDTO'
        '404':
          description: The requested ID was not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDTO'
        '429':
          description: Too many Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDTO'
        '500':
          description: Server ERROR
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDTO'
  /{initiativeId}/reward/import/{filename}:
    put:
      tags:
        - initiative-reward
      summary: Upload dispositive file
      operationId: putDispFileUpload
      parameters:
        - name: initiativeId
          in: path
          description: initiativeId
          required: true
          style: simple
          schema:
            type: string
        - name: filename
          in: path
          description: filename
          required: true
          style: simple
          schema:
            type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              required:
              - file
              type: object
              properties:
                file:
                  type: string
                  format: binary
      responses:
        '201':
          description: Created
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDTO'
        '401':
          description: Authentication failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDTO'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDTO'
        '404':
          description: The requested ID was not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDTO'
        '429':
          description: Too many Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDTO'
        '500':
          description: Server ERROR
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDTO'
components:
  schemas:
    SasToken:
      type: object
      properties:
        sas:
          type: string
    InitiativeAdditionalDTO:
      type: object
      properties:
        serviceIO:
          type: boolean
        serviceId:
          type: string
        serviceName:
          type: string
        serviceScope:
          enum:
            - LOCAL
            - NATIONAL
          type: string
        description:
          type: string
        privacyLink:
          type: string
        tcLink:
          type: string
        channels:
          $ref: '#/components/schemas/ChannelArrayDTO'
        logoFileName:
          type: string
        logoURL:
          type: string
        logoUploadDate:
          type: string
          format: date-time
    InitiativeGeneralDTO:
      type: object
      properties:
        budget:
          type: number
        beneficiaryType:
          enum:
            - PF
            - PG
          type: string
        beneficiaryKnown:
          type: boolean
        beneficiaryBudget:
          type: number
        startDate:
          type: string
          description: Start date
          format: date
          example: '2022-01-30'
        endDate:
          type: string
          description: Start date
          format: date
          example: '2022-01-30'
        rankingStartDate:
          type: string
          description: Start date
          format: date
          example: '2022-01-30'
        rankingEndDate:
          type: string
          description: Start date
          format: date
          example: '2022-01-30'
        rankingEnabled:
          type: boolean
        descriptionMap:
          $ref: '#/components/schemas/DescriptionMap'
    AutomatedCriteriaDTO:
      type: object
      properties:
        authority:
          type: string
        code:
          type: string
        field:
          type: string
        operator:
          type: string
        value:
          type: string
        orderDirection:
          type: string
          enum:
          - ASC
          - DESC
    InitiativeDTO:
      type: object
      properties:
        initiativeId:
          type: string
        initiativeName:
          type: string
        organizationId:
          type: string
        pdndToken:
          type: string
        creationDate:
          type: string
          description: Creation Date
          format: date-time
        updateDate:
          type: string
          description: Update Date
          format: date-time
        status:
          type: string
        pdndCheck:
          type: boolean
        autocertificationCheck:
          type: boolean
        beneficiaryRanking:
          type: boolean
        general:
          $ref: '#/components/schemas/InitiativeGeneralDTO'
        additionalInfo:
          $ref: '#/components/schemas/InitiativeAdditionalDTO'
        beneficiaryRule:
          $ref: '#/components/schemas/InitiativeBeneficiaryRuleDTO'
        rewardRule:
          $ref: '#/components/schemas/InitiativeRewardRuleDTO'
        trxRule:
          $ref: '#/components/schemas/InitiativeTrxConditionsDTO'
        refundRule:
          $ref: '#/components/schemas/InitiativeRefundRuleDTO'
    DescriptionLanguageMap:
      type: object
      properties:
        language:
          type: string
        description:
          type: string
      items:
        $ref: '#/components/schemas/DescriptionLanguageMap'
    InitiativeSummaryArrayDTO:
      type: array
      items:
        $ref: '#/components/schemas/InitiativeSummaryDTO'
    InitiativeSummaryDTO:
      type: object
      properties:
        initiativeId:
          type: string
        initiativeName:
          type: string
        status:
          type: string
        creationDate:
          type: string
          format: date-time
        updateDate:
          type: string
          format: date-time
        rankingEnabled:
          type: boolean
    ChannelArrayDTO:
      type: array
      items:
        $ref: '#/components/schemas/ChannelDTO'
    ChannelDTO:
      type: object
      properties:
        type:
          enum:
            - web
            - email
            - mobile
          type: string
        contact:
          type: string
    ErrorDTO:
      type: object
      properties:
        code:
          type: string
        message:
          type: string
    AnyOfInitiativeBeneficiaryRuleDTOSelfDeclarationCriteriaItems:
      type: object
      anyOf:
        - $ref: '#/components/schemas/SelfCriteriaBoolDTO'
        - $ref: '#/components/schemas/SelfCriteriaMultiDTO'
      description: List of possible criteria
    InitiativeBeneficiaryRuleDTO:
      type: object
      properties:
        selfDeclarationCriteria:
          type: array
          items:
            $ref: '#/components/schemas/AnyOfInitiativeBeneficiaryRuleDTOSelfDeclarationCriteriaItems'
        automatedCriteria:
          type: array
          items:
            $ref: '#/components/schemas/AutomatedCriteriaDTO'
    SelfCriteriaBoolDTO:
      type: object
      properties:
        _type:
          enum:
            - boolean
          type: string
        description:
          type: string
        value:
          type: boolean
        code:
          type: string
    SelfCriteriaMultiDTO:
      title: SelfCriteriaMultiDTO
      type: object
      properties:
        _type:
          enum:
            - multi
          type: string
        description:
          type: string
        value:
          type: array
          items:
            type: string
          example:
            - value1
            - value2
            - value3
        code:
          type: string
    ConfigBeneficiaryRuleArrayDTO:
      type: array
      items:
        $ref: '#/components/schemas/ConfigBeneficiaryRuleDTO'
    ConfigBeneficiaryRuleDTO:
      title: ConfigBeneficiaryRuleDTO
      type: object
      properties:
        code:
          type: string
        authority:
          type: string
        field:
          type: string
        operator:
          type: string
        checked:
          type: boolean
    ConfigTrxRuleArrayDTO:
      type: array
      items:
        $ref: '#/components/schemas/ConfigTrxRuleDTO'
    ConfigTrxRuleDTO:
      title: ConfigTrxRuleDTO
      type: object
      properties:
        code:
          type: string
        description:
          type: string
        enabled:
          type: boolean
        checked:
          type: boolean
    ConfigMccArrayDTO:
      type: array
      items:
        $ref: '#/components/schemas/ConfigMccDTO'
    ConfigMccDTO:
      title: ConfigMccDTO
      type: object
      properties:
        code:
          type: string
        description:
          type: string
    DayConfig:
      type: object
      properties:
        daysOfWeek:
          uniqueItems: true
          type: array
          items:
            type: string
            enum:
              - MONDAY
              - TUESDAY
              - WEDNESDAY
              - THURSDAY
              - FRIDAY
              - SATURDAY
              - SUNDAY
        intervals:
          type: array
          items:
            $ref: '#/components/schemas/Interval'
    InitiativeRewardAndTrxRulesDTO:
      required:
        - rewardRule
      type: object
      properties:
        rewardRule:
          oneOf:
            - $ref: '#/components/schemas/RewardGroupsDTO'
            - $ref: '#/components/schemas/RewardValueDTO'
        trxRule:
          $ref: '#/components/schemas/InitiativeTrxConditionsDTO'
    InitiativeRewardRuleDTO:
      required:
        - _type
      type: object
      properties:
        _type:
          type: string
      discriminator:
        propertyName: _type
    InitiativeTrxConditionsDTO:
      type: object
      properties:
        daysOfWeek:
          type: array
          properties:
            empty:
              type: boolean
          items:
            $ref: '#/components/schemas/DayConfig'
        threshold:
          $ref: '#/components/schemas/ThresholdDTO'
        mccFilter:
          $ref: '#/components/schemas/MccFilterDTO'
        trxCount:
          $ref: '#/components/schemas/TrxCountDTO'
        rewardLimits:
          type: array
          items:
            $ref: '#/components/schemas/RewardLimitsDTO'
    Interval:
      type: object
      properties:
        startTime:
          type: string
          description: "hours:minutes:seconds.nano"
          example: "00:16:00.000"
        endTime:
          type: string
          description: "hours:minutes:seconds.nano"
          example: "02:00:00.000"
    MccFilterDTO:
      type: object
      properties:
        allowedList:
          type: boolean
        values:
          uniqueItems: true
          type: array
          items:
            type: string
    LogoDTO:
      type: object
      properties:
        logoFileName:
          type: string
          example: "logo-name.png"
        logoURL:
          type: string
          example: "https://localhost:8080/logo/initiative/logo.png"
        logoUploadDate:
          type: string
          description: date-time
          example: "2022-11-18T17:16:08.8820821"
    RewardGroupDTO:
      type: object
      properties:
        from:
          type: number
        to:
          type: number
        rewardValue:
          maximum: 100
          minimum: 0
          type: number
    RewardGroupsDTO:
      type: object
      allOf:
        - $ref: '#/components/schemas/InitiativeRewardRuleDTO'
        - type: object
          properties:
            rewardGroups:
              type: array
              items:
                $ref: '#/components/schemas/RewardGroupDTO'
    RewardLimitsDTO:
      type: object
      properties:
        frequency:
          type: string
          enum:
            - DAILY
            - WEEKLY
            - MONTHLY
            - YEARLY
        rewardLimit:
          type: number
    RewardValueDTO:
      type: object
      allOf:
        - $ref: '#/components/schemas/InitiativeRewardRuleDTO'
        - type: object
          properties:
            rewardValue:
              maximum: 100
              minimum: 0
              type: number
    ThresholdDTO:
      type: object
      properties:
        from:
          type: number
        fromIncluded:
          type: boolean
        to:
          type: number
        toIncluded:
          type: boolean
    
    TrxCountDTO:
      type: object
      properties:
        from:
          type: integer
          format: int64
        fromIncluded:
          type: boolean
        to:
          type: integer
          format: int64
        toIncluded:
          type: boolean
    InitiativeRefundRuleDTO:
      type: object
      properties:
        accumulatedAmount:
          $ref: '#/components/schemas/AccumulatedAmountDTO'
        timeParameter:
          $ref: '#/components/schemas/TimeParameterDTO'
        additionalInfo:
          $ref: '#/components/schemas/RefundAdditionalInfoDTO'
    AccumulatedAmountDTO:
      required:
        - accumulatedType
      type: object
      properties:
        accumulatedType:
          type: string
          enum:
            - BUDGET_EXHAUSTED
            - THRESHOLD_REACHED
        refundThreshold:
          type: number
    TimeParameterDTO:
      required:
        - timeType
      type: object
      properties:
        timeType:
          type: string
          enum:
            - CLOSED
            - DAILY
            - WEEKLY
            - MONTHLY
            - QUARTERLY
            
    OnboardingDTO:
      type: object
      properties:
        content:
            type: array
            items:
              $ref: '#/components/schemas/StatusOnboardingDTOS'
        pageNo:
          type:  integer
          format: int32
        pageSize:
          type:  integer
          format: int32
        totalElements:
          type:  integer
          format: int32
        totalPages:
          type:  integer
          format: int32
    StatusOnboardingDTOS:
      type: object
      properties:
        beneficiary:
          type: string
        beneficiaryState:
          type: string
        updateStatusDate:
          type: string
          format: date-time
    RefundAdditionalInfoDTO:
      required:
        - identificationCode
      type: object
      properties:
        identificationCode:
          type: string
    InitiativeStatisticsDTO:
      type: object
      properties:
        lastUpdatedDateTime:
          type: string
          format: date-time
        onboardedCitizenCount:
          type:  integer
          format: int32
        accruedRewards:
          type: string
    PageRewardExportsDTO:
      title: PageRewardExportsDTO
      type: object
      properties:
        content:
          type: array
          items:
            $ref: '#/components/schemas/RewardExportsDTO'
        totalElements:
          type: integer
          format: int64
        totalPages:
          type: integer
          format: int32
    PageRewardImportsDTO:
      title: PageRewardImportsDTO
      type: object
      properties:
        content:
          type: array
          items:
            "$ref": "#/components/schemas/RewardImportsDTO"
        totalElements:
          type: integer
          format: int64
        totalPages:
          type: integer
          format: int32
    DescriptionMap:
          type: object
          additionalProperties:
            type: string
          example:
            it: Ciao!
            en: Hello!
            fr: Salut!
    RewardExportsDTO:
      title: RewardExportsDTO
      required: [
        "id",
        "organizationId",
        "initiativeId",
        "initiativeName",
        "filePath",
        "status",
        "notificationDate",
        "percentageResulted",
        "percentageResults",
        "rewardsExported",
        "rewardsNotified",
        "rewardsResulted",
        "rewardsResultedOk",
        "rewardsResults"
      ]
      type: object
      properties:
        feedbackDate:
          type: string
          format: date-time
        filePath:
          type: string
        id:
          type: string
        initiativeId:
          type: string
        initiativeName:
          type: string
        notificationDate:
          type: string
          format: date
        organizationId:
          type: string
        percentageResulted:
          type: string
        percentageResultedOk:
          type: string
        percentageResults:
          type: string
        rewardsExported:
          type: string
        rewardsNotified:
          type: integer
          format: int64
        rewardsResulted:
          type: integer
          format: int64
        rewardsResultedOk:
          type: integer
          format: int64
        rewardsResults:
          type: string
        status:
          type: string
    RewardImportsDTO:
      title: RewardImportsDTO
      type: object
      properties:
        contentLength:
          type: integer
          format: int32
        eTag:
          type: string
        elabDate:
          type: string
          format: date-time
        errorsSize:
          type: integer
          format: int32
        exportIds:
          type: array
          items:
            type: string
        feedbackDate:
          type: string
          format: date-time
        filePath:
          type: string
        initiativeId:
          type: string
        organizationId:
          type: string
        percentageResulted:
          type: string
        percentageResultedOk:
          type: string
        percentageResultedOkElab:
          type: string
        rewardsResulted:
          type: integer
          format: int64
        rewardsResultedError:
          type: integer
          format: int64
        rewardsResultedOk:
          type: integer
          format: int64
        rewardsResultedOkError:
          type: integer
          format: int64
        status:
          type: string
          enum:
          - COMPLETE
          - ERROR
          - IN_PROGRESS
          - WARN
        url:
          type: string
  securitySchemes:
    Bearer:
      type: apiKey
      name: Authorization
      in: header
security:
  - Bearer: []
tags:
  - name: initiative
    description: ''
