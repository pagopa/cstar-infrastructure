# Automatically triggered on PR
# Only triggers on branches
pr:
  autoCancel: true
  branches:
    exclude:
     - '*'

trigger:
  branches:
    exclude:
      - master
  paths:
    include:
      - 'src/*'
      - '.devops/*'
    exclude:
      - 'src/k8s/*'

parameters:
  - name: 'SUBSCRIPTION'
    displayName: 'Azure subscription hosting the infrastructure built with terraform'
    type: string
    default: DEV-CSTAR-SERVICE-CONN
    values:
      - PROD-CSTAR-SERVICE-CONN
      - UAT-CSTAR-SERVICE-CONN
      - DEV-CSTAR-SERVICE-CONN
pool:
  vmImage: 'ubuntu-20.04'


resources:
  repositories:
    - repository: terraform
      type: github
      name: pagopa/azure-pipeline-templates
      ref: refs/terrarorm-plan-template
      endpoint: 'io-azure-devops-github-ro'

stages:
  - stage: install
    jobs:
      - job: terraform_install
        steps:
          # 1. Install terraform and terragrunt
          - template: templates/terraform-setup/template.yaml@terraform
  - stage: plan_dev    
    jobs:
      - job: terraform_plan
        steps:
          # 2. Run terragrunt plan
          - template: templates/terraform-plan/template.yaml@terraform
            parameters:
              - SUBSCRIPTION: 'DEV-CSTAR-SERVICE-CONN'
              - ENVIRONMENT: 'dev'
  - stage: apply_dev    
    jobs:
      - deployment: terraform_apply
        displayName: "terraform apply"
        continueOnError: false
        environment: "Verify"
        strategy:
          runOnce:
            deploy:
              steps:
                - checkout: self
                - task: AzureCLI@2
                  displayName: Terraform apply
                  inputs:
                    azureSubscription: '${{ parameters.SUBSCRIPTION }}'
                    addSpnToEnvironment: true
                    scriptType: 'bash'
                    scriptLocation: 'inlineScript'
                    failOnStandardError: true
                    workingDirectory: src
                    inlineScript: |
                      RED='\033[0;31m'
                      NC='\033[0m' # No Color

                      export ARM_CLIENT_ID=$servicePrincipalId
                      export ARM_CLIENT_SECRET=$servicePrincipalKey
                      export ARM_SUBSCRIPTION_ID=`az account show --query id --output tsv`
                      export ARM_TENANT_ID=`az account show --query tenantId --output tsv`

                      echo "Start pipeline"
                      ./terraform.sh apply dev -auto-approve
  - stage: plan_uat 
    jobs:
      - job: terraform_plan
        steps:
          # 2. Run terragrunt plan
          - template: templates/terraform-plan/template.yaml@terraform
            parameters:
              - SUBSCRIPTION: 'DEV-CSTAR-SERVICE-CONN'
              - ENVIRONMENT: 'DEV'