pr:
  autoCancel: false
  branches:
    include:
      - main
  paths:
    include:
      - 'src/domains/idpay-app'
      - 'src/domains/idpay-common'

parameters:
  - name: 'DEV'
    displayName: 'Run on DEV environment'
    type: boolean
    default: True
    values:
      - False
      - True
  - name: 'UAT'
    displayName: 'Run on UAT environment'
    type: boolean
    default: True
    values:
      - False
      - True
  - name: 'PROD'
    displayName: 'Run on PROD environment'
    type: boolean
    default: True
    values:
      - False
      - True

variables:
  TIME_OUT: 10

pool:
  vmImage: 'ubuntu-20.04'

resources:
  repositories:
    - repository: terraform
      type: github
      name: pagopa/azure-pipeline-templates
      ref: refs/heads/improve-terraform-plan
      endpoint: 'io-azure-devops-github-ro'

stages:
  - stage: DEV
    dependsOn: []
    condition: and(succeeded(), eq(${{parameters.DEV}}, true))
    pool:
      name: cstar-dev-linux
    jobs:
      # - job: terraform_install
      #   steps:
      #     # 1. Install terraform and terragrunt
      #     - template: templates/terraform-setup/template.yaml@terraform
      # - job: terraform_plan_idpay_common
      #   strategy:
      #     parallel: 1
      #   dependsOn: terraform_install
      #   timeoutInMinutes: $[variables.TIME_OUT]
      #   steps:
      #     - checkout: self
      #     # 2. Run terraform plan idpay-common
      #     - template: templates/terraform-plan/template.yaml@terraform
      #       parameters:
      #         ENVIRONMENT: "dev"
      #         WORKINGDIR: 'src/domains/idpay-common'
      #         AZURE_SERVICE_CONNECTION_NAME: DEV-CSTAR-SERVICE-CONN
      - job: terraform_plan_idpay_app
        dependsOn: terraform_install
        timeoutInMinutes: $[variables.TIME_OUT]
        strategy:
          parallel: 1
        steps:
          - checkout: self
          # 2. Run terraform plan idpay-app
          - template: templates/terraform-plan/template.yaml@terraform
            parameters:
              ENVIRONMENT: "dev"
              WORKINGDIR: 'src/domains/idpay-app'
              AZURE_SERVICE_CONNECTION_NAME: DEV-CSTAR-SERVICE-CONN
              AKS_NAME: "cstar-d-weu-dev01-aks"
              AKS_RG_NAME: "cstar-d-weu-dev01-aks-rg"

  # - stage: UAT
  #   dependsOn: []
  #   condition: and(succeeded(), eq(${{parameters.UAT}}, true))
  #   pool:
  #     name: cstar-uat-linux
  #   jobs:
  #     - job: terraform_install
  #       steps:
  #         # 1. Install terraform and terragrunt
  #         - template: templates/terraform-setup/template.yaml@terraform
  #     - job: terraform_plan
  #       dependsOn: terraform_install
  #       timeoutInMinutes: $[variables.TIME_OUT]
  #       steps:
  #         - checkout: self
  #         # 2. Run terragrunt plan
  #         - template: templates/terraform-plan/template.yaml@terraform
  #           parameters:
  #             SUBSCRIPTION: UAT-CSTAR-SERVICE-CONN
  #             ENVIRONMENT: uat

  # - stage: PROD
  #   dependsOn: []
  #   condition: and(succeeded(), eq(${{parameters.PROD}}, true))
  #   pool:
  #     name: cstar-prod-linux
  #   jobs:
  #     - job: terraform_install
  #       steps:
  #         # 1. Install terraform and terragrunt
  #         - template: templates/terraform-setup/template.yaml@terraform
  #     - job: terraform_plan
  #       dependsOn: terraform_install
  #       timeoutInMinutes: $[variables.TIME_OUT]
  #       steps:
  #         - checkout: self
  #         # 2. Run terragrunt plan
  #         - template: templates/terraform-plan/template.yaml@terraform
  #           parameters:
  #             SUBSCRIPTION: PROD-CSTAR-SERVICE-CONN
  #             ENVIRONMENT: prod
