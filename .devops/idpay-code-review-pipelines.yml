pr:
  autoCancel: false
  branches:
    include:
      - main
  paths:
    include:
      - 'src/domains/idpay-app'
      - 'src/domains/idpay-common'
    exclude:
      - '**/*.lock.hcl'
      - '**/*.md'


parameters:
  - name: 'DEV'
    displayName: 'Run on DEV environment'
    type: boolean
    default: True
    values:
      - False
      - True
  - name: 'UAT'
    displayName: 'Run on UAT environment'
    type: boolean
    default: True
    values:
      - False
      - True
  - name: 'PROD'
    displayName: 'Run on PROD environment'
    type: boolean
    default: True
    values:
      - False
      - True

variables:
  TIME_OUT: 15
  DEV01_AKS_APISERVER_URL: '$(TF_DEV01_AKS_APISERVER_URL)'
  DEV01_AKS_AZURE_DEVOPS_SA_CACRT: '$(TF_DEV01_AKS_AZURE_DEVOPS_SA_CACRT)'
  DEV01_AKS_AZURE_DEVOPS_SA_TOKEN: '$(TF_DEV01_AKS_AZURE_DEVOPS_SA_TOKEN)'
  AKS_DEV_NAME: '$(TF_AKS_DEV_NAME)'

  UAT01_AKS_APISERVER_URL: '$(TF_UAT01_AKS_APISERVER_URL)'
  UAT01_AKS_AZURE_DEVOPS_SA_CACRT: '$(TF_UAT01_AKS_AZURE_DEVOPS_SA_CACRT)'
  UAT01_AKS_AZURE_DEVOPS_SA_TOKEN: '$(TF_UAT01_AKS_AZURE_DEVOPS_SA_TOKEN)'
  AKS_UAT_NAME: '$(TF_AKS_UAT_NAME)'

  PROD01_AKS_APISERVER_URL: '$(TF_PROD01_AKS_APISERVER_URL)'
  PROD01_AKS_AZURE_DEVOPS_SA_CACRT: '$(TF_PROD01_AKS_AZURE_DEVOPS_SA_CACRT)'
  PROD01_AKS_AZURE_DEVOPS_SA_TOKEN: '$(TF_PROD01_AKS_AZURE_DEVOPS_SA_TOKEN)'
  AKS_PROD_NAME: '$(TF_AKS_PROD_NAME)'

pool:
  vmImage: 'ubuntu-20.04'

resources:
  repositories:
    - repository: terraform
      type: github
      name: pagopa/azure-pipeline-templates
      ref: refs/tags/v2.4.0
      endpoint: 'io-azure-devops-github-ro'

stages:
#
# DEV
#
  - stage: tf_plan_common_dev
    dependsOn: []
    condition: and(succeeded(), eq(${{parameters.DEV}}, true))
    pool:
      name: cstar-dev-linux
    jobs:
      - job: tf_plan_idpay_common
        strategy:
          parallel: 1
        timeoutInMinutes: $[variables.TIME_OUT]
        steps:
          - checkout: self
          # 1. Install terraform and terragrunt
          - template: templates/terraform-setup/template.yaml@terraform
          # 2. Run terraform plan idpay-common
          - template: templates/terraform-plan/template.yaml@terraform
            parameters:
              ENVIRONMENT: "dev"
              WORKINGDIR: 'src/domains/idpay-common'
              AZURE_SERVICE_CONNECTION_NAME: DEV-CSTAR-SERVICE-CONN

  - stage: tf_plan_app
    dependsOn: [tf_plan_common_dev]
    condition: and(succeeded(), eq(${{parameters.DEV}}, true))
    pool:
      name: cstar-dev-linux
    jobs:
      - job: tf_plan_idpay_app
        timeoutInMinutes: $[variables.TIME_OUT]
        strategy:
          parallel: 1
        steps:
          - checkout: self
          # 1. Install terraform and terragrunt
          - template: templates/terraform-setup/template.yaml@terraform
          # Run terraform plan idpay-app
          - template: templates/terraform-plan/template.yaml@terraform
            parameters:
              ENVIRONMENT: "dev"
              WORKINGDIR: 'src/domains/idpay-app'
              AZURE_SERVICE_CONNECTION_NAME: DEV-CSTAR-SERVICE-CONN
              AKS_NAME: ${{ variables.AKS_DEV_NAME }}
              AKS_API_SERVER_URL: ${{ variables.DEV01_AKS_APISERVER_URL }}
              AKS_AZURE_DEVOPS_SA_CA_CRT: ${{ variables.DEV01_AKS_AZURE_DEVOPS_SA_CACRT }}
              AKS_AZURE_DEVOPS_SA_TOKEN: ${{ variables.DEV01_AKS_AZURE_DEVOPS_SA_TOKEN }}

#
# UAT
#
  - stage: tf_plan_common_uat
    dependsOn: []
    condition: and(succeeded(), eq(${{parameters.UAT}}, true))
    pool:
      name: cstar-uat-linux
    jobs:
      - job: tf_plan_idpay_common
        strategy:
          parallel: 1
        timeoutInMinutes: $[variables.TIME_OUT]
        steps:
          - checkout: self
          # 1. Install terraform and terragrunt
          - template: templates/terraform-setup/template.yaml@terraform
          # 2. Run terraform plan idpay-common
          - template: templates/terraform-plan/template.yaml@terraform
            parameters:
              ENVIRONMENT: "uat"
              WORKINGDIR: 'src/domains/idpay-common'
              AZURE_SERVICE_CONNECTION_NAME: UAT-CSTAR-SERVICE-CONN

  - stage: tf_plan_app_uat
    dependsOn: [tf_plan_common_uat]
    condition: and(succeeded(), eq(${{parameters.UAT}}, true))
    pool:
      name: cstar-uat-linux
    jobs:
      - job: tf_plan_idpay_app
        timeoutInMinutes: $[variables.TIME_OUT]
        strategy:
          parallel: 1
        steps:
          - checkout: self
          # 1. Install terraform and terragrunt
          - template: templates/terraform-setup/template.yaml@terraform
          # Run terraform plan idpay-app
          - template: templates/terraform-plan/template.yaml@terraform
            parameters:
              ENVIRONMENT: "uat"
              WORKINGDIR: 'src/domains/idpay-app'
              AZURE_SERVICE_CONNECTION_NAME: UAT-CSTAR-SERVICE-CONN
              AKS_NAME: ${{ variables.AKS_UAT_NAME }}
              AKS_API_SERVER_URL: ${{ variables.UAT01_AKS_APISERVER_URL }}
              AKS_AZURE_DEVOPS_SA_CA_CRT: ${{ variables.UAT01_AKS_AZURE_DEVOPS_SA_CACRT }}
              AKS_AZURE_DEVOPS_SA_TOKEN: ${{ variables.UAT01_AKS_AZURE_DEVOPS_SA_TOKEN }}

#
# PROD
#
  - stage: tf_plan_common_prod
    dependsOn: []
    condition: and(succeeded(), eq(${{parameters.PROD}}, true))
    pool:
      name: cstar-prod-linux
    jobs:
      - job: tf_plan_idpay_common
        strategy:
          parallel: 1
        timeoutInMinutes: $[variables.TIME_OUT]
        steps:
          - checkout: self
          # 1. Install terraform and terragrunt
          - template: templates/terraform-setup/template.yaml@terraform
          # 2. Run terraform plan idpay-common
          - template: templates/terraform-plan/template.yaml@terraform
            parameters:
              ENVIRONMENT: "prod"
              WORKINGDIR: 'src/domains/idpay-common'
              AZURE_SERVICE_CONNECTION_NAME: PROD-CSTAR-SERVICE-CONN

  - stage: tf_plan_app_prod
    dependsOn: [tf_plan_common_prod]
    condition: and(succeeded(), eq(${{parameters.PROD}}, true))
    pool:
      name: cstar-prod-linux
    jobs:
      - job: tf_plan_idpay_app
        timeoutInMinutes: $[variables.TIME_OUT]
        strategy:
          parallel: 1
        steps:
          - checkout: self
          # 1. Install terraform and terragrunt
          - template: templates/terraform-setup/template.yaml@terraform
          # Run terraform plan idpay-app
          - template: templates/terraform-plan/template.yaml@terraform
            parameters:
              ENVIRONMENT: "prod"
              WORKINGDIR: 'src/domains/idpay-app'
              AZURE_SERVICE_CONNECTION_NAME: PROD-CSTAR-SERVICE-CONN
              AKS_NAME: ${{ variables.AKS_PROD_NAME }}
              AKS_API_SERVER_URL: ${{ variables.PROD01_AKS_APISERVER_URL }}
              AKS_AZURE_DEVOPS_SA_CA_CRT: ${{ variables.PROD01_AKS_AZURE_DEVOPS_SA_CACRT }}
              AKS_AZURE_DEVOPS_SA_TOKEN: ${{ variables.PROD01_AKS_AZURE_DEVOPS_SA_TOKEN }}
