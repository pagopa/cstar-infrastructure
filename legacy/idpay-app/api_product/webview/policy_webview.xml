<policies>
  <inbound>
    <base />
    <rate-limit calls="${rate_limit_io_product}" renewal-period="60" />
    <choose>
      <when condition="@("login,getRedirect,session".Split(',').Contains(context.Operation.Id))">
      </when>
      <otherwise>
        <include-fragment fragment-id="idpay-webview-validate-token-mil" />
        <choose>
          <when condition="@(((Jwt)context.Variables["milToken"]).Claims.GetValueOrDefault("groups", "") == "write_idpay_bonus_io")">
          <!-- If 'groups' claim equals "emd-tpp", set your policy logic here -->
          <!-- For example, you can continue with your policy flow -->
          <set-variable name="groups" value="@(((Jwt)context.Variables["milToken"]).Claims.GetValueOrDefault("groups", ""))" />
          </when>
          <otherwise>
            <!-- Handle cases where 'groups' claim does not equal "write_idpay_bonus_io" -->
            <return-response>
              <set-status code="401" reason="Unauthorized" />
              <set-body>
                @{
                var responseJson = new JObject();
                responseJson["statusCode"] = 401;
                responseJson["message"] = "Access denied: User does not have required permissions.";
                return responseJson.ToString();
                }
              </set-body>
            </return-response>
          </otherwise>
        </choose>
      </otherwise>
   </choose>
  </inbound>
<backend>
<base />
</backend>
<outbound>
<base />
</outbound>
<on-error>
<base />
</on-error>
  </policies>
